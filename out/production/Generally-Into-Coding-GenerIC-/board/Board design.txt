Board design
rank – horizontal row 1-8, 1 is white
file – vertical column a-h, a is white's queenside pawn
queen on own color
move notation is letter (file), number (rank)

A8	H8
A1	H1

However, java reads 2D arrays as row, column from the top
Array counting should therefore start at highest index (8) and move down.
Additionally, the letter should be the second part of the array
in the program even though it's the first in proper chess notation

Suggest converting a-h to 1-8, should make calculations easier to handle


A slightly more "elegant" string to index converter.
// Converts "a1"..."h8" to board[row][col]
public static int[] squareToIndex(String square) {
    char fileChar = square.charAt(0);          // 'a'..'h'
    int file = fileChar - 'a';                 // 0..7 (a-a=0, b-a=1 etc)
    int rank = Character.getNumericValue(square.charAt(1)); // 1..8
    int row = 8 - rank;                        // rank 1 -> row 7
    return new int[]{row, file};
}

// Back to chess notation if we need it.
public static String indexToSquare(int row, int col) {
    char file = (char)('a' + col);
    int rank = 8 - row;
    return "" + file + rank;
}